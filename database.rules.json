{
  "rules": {
    "games": {
      "$game_id": {
        ".read": "auth != null",
        ".write": "auth != null",
        ".validate": "newData.hasChildren(['meta'])",
        "history": {
          "$event_id": {
            ".write": "auth != null && data.parent().parent().child('meta/users/' + auth.uid).exists() && !data.exists() && newData.exists()",
            ".validate": "newData.hasChildren(['user', 'card', 'time'])",
            "user": {
              ".validate": "newData.isString() && newData.val() == auth.uid"
            },
            "card": {
              ".validate": "(newData.val().matches(/^((([2-9TJQKAZ])[SHDC])|(Z[SHDC][2-9TJQKA]))$/) || newData.val().matches(/^([Y][Y])$/)) && newData.isString()"
            },
            "selection": {
            },
            "time": {
              ".validate": "newData.isNumber() && newData.val() == now"
            },
            "roundPlayed": {
              ".validate": "newData.isNumber()"
            },
            "$other": {
              ".validate": false
            }
          }
        },
        "lastFour":{
          "$entry": {
            "card":{
              
            },
            "selection":{
              
            },
            "user":{
              
            },
            "time":{
              
            },
            "roundPlayed":{
              
            }
          }
        },
        "balls": { 
          "$ball": {
             ".validate": true
          }
        },
        "hands": { 
          "$hand": {
             ".validate": true
          }
        },
        "numCards":{
            ".validate": "newData.isNumber()"
        },
        "nextPlayer":{
          ".validate" : true
        },
        "rooted": {
          ".validate": "newData.isString()"
        },
        "round": {
          ".validate": "newData.isNumber()"
        },
        "rules":{
		  ".validate": "newData.isString()"
        },
        "order": {
          "$user_ids" : {
              ".validate": true
          }
        },
        "exchange": {
          "$user_ids" : {
            ".validate": true
          }
        },
        "meta": {
          ".validate": "newData.hasChildren(['admin', 'created', 'status'])",
          "admin": {
            ".validate": "newData.isString() && newData.val() == auth.uid"
          },
          "created": {
            ".validate": "newData.isNumber() && newData.val() == now"
          },
          "started": {
            ".write": "auth != null && auth.uid == data.parent().child('admin').val() && !data.exists() && newData.exists()",
            ".validate": "newData.isNumber() && newData.val() == now"
          },
          "status": {
            ".write": "auth != null && data.parent().child('users/' + auth.uid).exists() && newData.exists()",
            ".validate": "newData.isString() && ((!data.exists() && newData.val() == 'waiting') || (data.val() == 'waiting' && newData.val() == 'ingame') || (data.val() == 'ingame' && newData.val() == 'done'))"
          },
          "users": {
            "$user_id": {
              ".write": "auth != null && (auth.uid == $user_id || auth.uid == data.parent().child('admin').val()) && newData.exists()",
              ".validate": "newData.hasChildren(['name', 'color'])",
              "name": {
                ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 40"
              },
              "color": {
                ".validate": "newData.isString()"
              },
              "$other": {
                ".validate": false
              }
            }
          },
          "$other": {
            ".validate": false
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "users": {
      "$user_id": {
        ".read": "auth != null && auth.uid == $user_id",
        ".write": "auth != null && auth.uid == $user_id",
        "games": {
          "$key": {
            ".validate": "newData.isString()"
          }
        },
        "color": {
          ".validate": "newData.isString()"
        },
        "help":{
          ".validate": "newData.isNumber()"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 40"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "chats": {
      "$chat_id": {
        ".read": true,
        "$message_id": {
          ".write": "!data.exists() && newData.exists() && auth != null",
          ".validate": "newData.hasChildren(['user', 'message'])",
          "user": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val() == root.child('users/' + auth.uid + '/name').val()"
          },
          "message": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "$other": {
            ".validate": false
          }
        }
      }
    }
  }
}
